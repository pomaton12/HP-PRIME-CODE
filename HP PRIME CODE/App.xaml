<Application x:Class="HP_PRIME_CODE.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
             
             StartupUri="MainWindow.xaml">
    <Application.Resources>



        <ResourceDictionary>


            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Light" />
                <ui:ControlsDictionary />
                <ResourceDictionary x:Name="Theme1Resources" Source="Recursos/Color_Light.xaml" />
                <ResourceDictionary x:Name="Theme1IconResources" Source="Recursos/IconLight.xaml" />
                <ResourceDictionary x:Name="Theme1IdiomaResources" Source="Recursos/Idioma_Es.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="SegoeFluentIcons" >pack://application:,,,/FuentesIcon/#Segoe Fluent Icons</FontFamily>
            
            <FontFamily x:Key="Prime Sans Mono" >pack://application:,,,/FuentesIcon/#Prime Sans Mono</FontFamily>
            <FontFamily x:Key="Fira Mono" >pack://application:,,,/FuentesIcon/#Fira Mono</FontFamily>
            <FontFamily x:Key="Inconsolata" >pack://application:,,,/FuentesIcon/#Inconsolata Condensed</FontFamily>
            <FontFamily x:Key="Consolas" >pack://application:,,,/FuentesIcon/#Consolas</FontFamily>
            <FontFamily x:Key="Menlo" >pack://application:,,,/FuentesIcon/#Menlo</FontFamily>
            <FontFamily x:Key="Monospac 821" >pack://application:,,,/FuentesIcon/#Monospac821 BT</FontFamily>
            <FontFamily x:Key="Cascadia Mono Regular">pack://application:,,,/FuentesIcon/#Cascadia Mono SemiLight</FontFamily>
            <FontFamily x:Key="Cascadia Mono Light">pack://application:,,,/FuentesIcon/#Cascadia Mono Light</FontFamily>
            <FontFamily x:Key="Cascadia Mono ExtraLight">pack://application:,,,/FuentesIcon/#Cascadia Mono ExtraLight</FontFamily>
            <FontFamily x:Key="Courier New" >pack://application:,,,/FuentesIcon/#Courier New</FontFamily>



            <FontFamily x:Key="IconHP" >pack://application:,,,/FuentesIcon/#IconHP</FontFamily>

            <SolidColorBrush x:Key="ColorPanelW11" Color="{ui:ThemeResource ControlSolidFillColorDefault}" />
            <SolidColorBrush x:Key="ColorSelectorBoton" Color="{ui:ThemeResource LayerOnMicaBaseAltFillColorDefault}" />

            <SolidColorBrush x:Key="ColorCustomSelectMenu" Color="{DynamicResource  HexCustomSelectMenu}" />
            <SolidColorBrush x:Key="ColorCustomMouseOver" Color="{DynamicResource  HexCustomMouseOver}" />
            <SolidColorBrush x:Key="ColorCustomLineAndBackground" Color="{DynamicResource  HexCustomLine}" />
            <SolidColorBrush x:Key="ColorCustomTapButon" Color="{DynamicResource  HexCustomControlButon}" />

            <SolidColorBrush x:Key="ColorBlanco" Color="{DynamicResource HexCustomDefault}" />

            <!-- menssagebutton color -->
            <SolidColorBrush x:Key="ColorAppMessageBoxButonTop" Color="{DynamicResource  HexCustomMessageBoxTop}" />
            <SolidColorBrush x:Key="ColorAppMessageBoxButonBot" Color="{DynamicResource  HexCustomMessageBoxBot}" />
            <SolidColorBrush x:Key="ColorAppMessageBoxButon" Color="{DynamicResource  HexCustomMessageBoxButton}" />
            <SolidColorBrush x:Key="ColorAppMessageBoxButonStyle" Color="{DynamicResource  HexCustomMessageBoxOver}" />


            <!--Multi ListBox-->
            <!-- En open para seleccion ya de abrir archivos -->
            <Style x:Key="ButtonInicioAplication" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource ColorOpenFondoButon}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7" >
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="15" Direction="275" ShadowDepth="4" Opacity="0.2"/>
                                </Border.Effect>
                                <ContentPresenter VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorFondoButonOver}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorOpenFondoButonSelected}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Multi ListBox-->
            <!-- En open para seleccion ya de abrir archivos -->
            <Style x:Key="topButtonOpenFile" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource ColorOpenFondoButon}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ColorOpenFondoButonLine}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" BorderThickness=" 0 0 0 1"  BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorFondoButonOver}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Margin" Value="0 -1 0 0" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorOpenFondoButonSelected}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Margin" Value="0 -1 0 -1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- En open para todos los botones -->
            <Style x:Key="topButtonOpen" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="5" BorderBrush="Transparent" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ColorCustomMouseOver}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ColorCustomSelectMenu}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Stylo para boton de Regresar a Pantalla de trabajo-->
            <Style x:Key="DesgloseButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorMouseMouseOverTitle}" />
                        <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Stylo para boton cerrar title-->
            <Style x:Key="StyleCloseButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" >
                                    <ContentPresenter  VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ColorW11Red}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ColorBlancoGeneric}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <!--Prop Menu Butoon-->
            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="40" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"/>
                                    <!-- Ancho de la barra de color -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Ancho del contenido del botón -->
                                </Grid.ColumnDefinitions>
                                <Border x:Name="SelectRec" Grid.Column="0" CornerRadius="2" Margin="0 8 0 8" Background="Transparent"/>
                                <!-- Barra de color -->
                                <Border Grid.Column="1" Background="{TemplateBinding Background}" CornerRadius="5">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                                    <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="SelectRec" Property="Background" Value="{DynamicResource ColorIconBlue}" />
                                    <Setter TargetName="SelectRec" Property="Margin" Value="0 5 0 5" />
                                    <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                                    <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                                    <Setter Property="Foreground" Value="{DynamicResource ColorIconBlue}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>


            </Style>

            <!--Prop Menu Butoon-->
            <Style x:Key="menuButtonSelected" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorIconBlue}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="40" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"/>
                                    <!-- Ancho de la barra de color -->
                                    <ColumnDefinition Width="*"/>
                                    <!-- Ancho del contenido del botón -->
                                </Grid.ColumnDefinitions>
                                <Border x:Name="SelectRec" Grid.Column="0" CornerRadius="2" Margin="0 10 0 10" Background="{DynamicResource ColorIconBlue}"/>
                                <!-- Barra de color -->
                                <Border Grid.Column="1" Background="{TemplateBinding Background}" CornerRadius="5">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="SelectRec" Property="Background" Value="{DynamicResource ColorIconBlue}" />
                                    <Setter TargetName="SelectRec" Property="Margin" Value="0 5 0 5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--Prop Stilo de botones para Interfaz principal W11 vertical icono debajo letra-->
            <Style x:Key="menuButtonVigaVerti" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="2 0 0 0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="500" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorMouseOverPanelButon}" />
                    </Trigger>

                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="menuButtonToogle" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="2 0 0 0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" >
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorMouseOverPanelButon}" />
                    </Trigger>

                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Stylo para ToogleButton En W11-->
            <Style x:Key="menuButtonVigaHori" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="2 0 0 0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorMouseOverPanelButon}" />
                    </Trigger>

                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorSelectedPanelButon}" />
                    </Trigger>

                </Style.Triggers>

            </Style>



            <!--# BOTONES DE ARCHIVO INICIO, ES DECIR EN INTERFAZ PRINCIPAL DE DIBUJO W11 Theme-->
            <Style x:Key="tabButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomSemiNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="20 0 0 0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <!-- Ancho de la barra de color -->
                                    <RowDefinition Height="2"/>
                                    <!-- Ancho del contenido del botón -->
                                </Grid.RowDefinitions>

                                <Border Background="{TemplateBinding Background}" BorderThickness="0">

                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </Border>
                                <Border Grid.Row="1" x:Name="BorderStyy"  CornerRadius="1" Width="{TemplateBinding Width}" Height="2" Margin="0 -8 0 0" Background="Transparent"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderStyy"  Property="Background" Value="{DynamicResource ColorUndoRedoDesactive}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="BorderStyy" Property="Background" Value="{DynamicResource ColorIconBlue}" />
                                    <Setter TargetName="BorderStyy" Property="Margin" Value="-10 -8 -10 0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
            <Style x:Key="tabButton1" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="BorderBrush" Value="{StaticResource ColorCustomTapButon}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="20 0 0 0" />
                <Setter Property="FontFamily" Value="Segoe UI Semibold" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <!-- Ancho de la barra de color -->
                                    <RowDefinition Height="2"/>
                                    <!-- Ancho del contenido del botón -->
                                </Grid.RowDefinitions>

                                <Border Background="{TemplateBinding Background}" BorderThickness="0">

                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                </Border>
                                <Border Grid.Row="1" x:Name="BorderStyy" BorderThickness="0" CornerRadius="1" Width="{TemplateBinding Width}" Height="2" Margin="0 -8 0 0" Background="{DynamicResource ColorIconBlue}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BorderStyy" Property="Background" Value="{DynamicResource ColorIconBlue}" />
                                    <Setter TargetName="BorderStyy" Property="Margin" Value="-10 -8 -10 0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <!--#STYLO BOTON DE BUSQUE EN LA CAVEZA DE TODOS -->
            <Style x:Key="searchTextbox" TargetType="TextBox">
                <Setter Property="Background" Value="White"  />
                <Setter Property="Foreground" Value="Black"  />
                <Setter Property="BorderBrush" Value="#B3B0AD" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="5 5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="5 5" />
                <!--<Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>-->

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="1"  >
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#A18BE3"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#A18BE3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="filterTextBox" TargetType="TextBox" BasedOn="{StaticResource searchTextbox}">
                <Setter Property="BorderBrush"  Value="{StaticResource ColorCustomLineAndBackground}"/>
                <Setter Property="Background"  Value="{StaticResource ColorPanelW11}"/>
                <Setter Property="Foreground"  Value="{DynamicResource ColorCustomNegroG}"/>
                <Setter Property="FontSize"  Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">

                            <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="0.3"  Direction="0" />
                                </Border.Effect>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                            </Border>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush"  Value="{StaticResource ColorCustomLineAndBackground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <!--#TODO PARA VIGA -->
            <Style x:Key="CustomRadioButtonStyle" TargetType="RadioButton">
                <Setter Property="FontSize" Value="16" />
                <!-- Cambia el tamaño de la fuente -->
                <Setter Property="Width" Value="22" />
                <!-- Cambia el ancho de la casilla completa -->
                <Setter Property="Height" Value="22" />
                <Setter  Property="Foreground" Value="{StaticResource ColorAppMessageBoxButon}" />
                <Setter  Property="Background" Value="{StaticResource ColorBlanco}" />
                <Setter  Property="BorderBrush" Value="{StaticResource ColorCustomLineAndBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="border"
                                Grid.Column="0"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="3"
                                BorderThickness="1">
                                    <Border  x:Name="checkMark"  Background="{TemplateBinding Background}" CornerRadius="3" Visibility="Collapsed">
                                        <TextBlock   Text="&#xF78C;" FontWeight="Bold" FontFamily="{StaticResource SegoeFluentIcons}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" />
                                    </Border>
                                </Border>
                                <ContentPresenter Grid.Column="1" Margin="4,0,0,0" VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <Style x:Key="mainButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource ColorAppMessageBoxButon}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomBlancoG}" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Width" Value="180" />
                <Setter Property="Height" Value="40" />
                <Setter Property="FontFamily" Value="Roboto" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ColorAppMessageBoxButonStyle}" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="secondaryButton" TargetType="Button" BasedOn="{StaticResource mainButton}">
                <Setter Property="Background" Value="{DynamicResource ColorMessageBoxButtonCerrar}" />
                <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                <Setter Property="FontFamily" Value="Roboto" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7" BorderThickness="0.6" BorderBrush="{DynamicResource ColorMessageBoxLine}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ColorMessageBoxButtonCerrarOver}" />
                        <Setter Property="Foreground" Value="{DynamicResource ColorCustomNegroG}" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="InputData" TargetType="TextBox">
                <Setter Property="Foreground" Value="Black"  />
                <Setter Property="BorderBrush" Value="#E0E0E0"  />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="5 5" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="10 0 0 0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="#E0E0E0" Background="White" SnapsToDevicePixels="True" BorderThickness="1"  >
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0049FF"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#0049FF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <!--//=====================-->
            <!--PARA TAB CONTROL PARA PESTAÑAS-->
            <Style x:Key="CustomTabControlStyle" TargetType="TabControl">
                <Setter Property="Background" Value="{StaticResource ColorCustomTheme}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TabPanel Grid.Row="0" Panel.ZIndex="1" Background="{TemplateBinding Background}" Margin="0,0,0,-1" IsItemsHost="True" />
                                <Border Grid.Row="1" Background="{TemplateBinding Background}">
                                    <ContentPresenter ContentSource="SelectedContent" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="TabItem">
                            <Setter Property="Background" Value="{StaticResource ColorCustomLineAndBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ColorAppMessageBoxButon}" />
                            <Setter Property="Height" Value="40" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border Name="Border" Background="{TemplateBinding Background}" Margin="2 0 0 0">
                                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2" Grid.Column="0" />
                                           
                                            </Border>

                                            <Border Name="Border1" Grid.Column="1" Background="{TemplateBinding Background}" Margin="0 0 0 0">
                                            <Button Name="Buton"   Margin="0,0,0,0" Content="x" Width="20" BorderThickness="0" 
                                                Foreground="Black" Background="{TemplateBinding Background}"
                                                Command="{Binding DataContext.CloseTabCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" 
                                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                                Padding="0" 
                                                />
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="white" />
                                                <Setter TargetName="Border1" Property="Background" Value="white" />
                                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black" />
                                                <Setter TargetName="Buton" Property="TextBlock.Foreground" Value="Black" />
                                                <Setter TargetName="Buton" Property="Background" Value="white" />
                                            </Trigger>
                                            
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="white" />
                                                <Setter TargetName="Border1" Property="Background" Value="white" />
                                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black" />
                                                <Setter TargetName="Buton" Property="TextBlock.Foreground" Value="Black" />
                                                <Setter TargetName="Buton" Property="Background" Value="white" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--//======================-->
            <!--PARA BOTON CLICK VARIOS-->
            <Style x:Key="SquaredButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource ColorBlanco}"/>
                <Setter Property="Foreground" Value="{StaticResource ColorCustomLineAndBackground}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#2196F3"/>
                    </Trigger>

                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="#2196F3"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>

                </Style.Triggers>
            </Style>

            <Style TargetType="ToolTip">
                <Setter Property="ToolTipService.Placement" Value="Mouse"/>
                <Setter Property="ToolTipService.HorizontalOffset" Value="-25"/>
                <Setter Property="ToolTipService.VerticalOffset" Value="-25"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Grid>
                                <Border Margin="25" Background="{DynamicResource ColorToolTip}" BorderBrush="{DynamicResource ColorMessageBoxLine}" BorderThickness="1" CornerRadius="5" Padding="4">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Direction="270" ShadowDepth="4" Opacity="0.2" BlurRadius="30"/>
                                    </Border.Effect>
                                    <TextBlock Text="{TemplateBinding Content}" Margin="4" Background="{DynamicResource ColorToolTip}" Foreground="{DynamicResource ColorCustomNegroG}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="ContextMenu">
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Grid>
                                <Border  Margin="10" Background="{DynamicResource ColorToolTip}"  BorderBrush="{DynamicResource ColorContextBorde}" BorderThickness="1" CornerRadius="5" Padding="0 5 0 5">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Direction="270" ShadowDepth="3" Opacity="0.15" BlurRadius="10"/>
                                    </Border.Effect>
                                    <ItemsPresenter/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StyleMenuItem" TargetType="MenuItem">
                <Setter Property="Foreground" Value="{DynamicResource ColorContextText}"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="Bd" Background="{TemplateBinding Background}">
                                <Grid Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0" ContentSource="Icon" Margin="10,0,10,0"/>
                                    <ContentPresenter Grid.Column="1" ContentSource="Header" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ColorContextMouseOver}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>






            <!--//======================-->
            <!-- SCROOLL BAR-->
            <Duration x:Key="ScrollAnimationDuration">0:0:0.16</Duration>
            <Duration x:Key="ButtonHoverAnimationDuration">0:0:0.16</Duration>

            <sys:Double x:Key="LineButtonHeight">16</sys:Double>
            <sys:Double x:Key="LineButtonWidth">16</sys:Double>

            <Style x:Key="UiScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Foreground" Value="{DynamicResource ScrollBarThumbFill}" />
                <Setter Property="Width" Value="{StaticResource LineButtonWidth}" />
                <Setter Property="Height" Value="{StaticResource LineButtonHeight}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border
                        x:Name="Border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="{TemplateBinding Margin}"
                        Background="{DynamicResource ScrollBarButtonBackground}"
                        CornerRadius="6">
                                <ui:SymbolIcon
                            Margin="0,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Filled="True"
                            FontSize="{TemplateBinding FontSize}"
                            Foreground="{TemplateBinding Foreground}"
                            Symbol="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)"
                                            From="0.0"
                                            To="1.0"
                                            Duration="{StaticResource ButtonHoverAnimationDuration}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Opacity)"
                                            From="1.0"
                                            To="0.0"
                                            Duration="{StaticResource ButtonHoverAnimationDuration}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="UiScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="UiScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbFill}" />
                <Setter Property="Border.CornerRadius" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="{TemplateBinding Border.CornerRadius}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="UiVerticalScrollBar" TargetType="{x:Type ScrollBar}" >
                <Grid Margin="0 0 -50 -15">
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="14" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="14" />
                    </Grid.RowDefinitions>
                    <Border
                x:Name="PART_Border"
                Grid.RowSpan="3"
                Width="20"
                
                HorizontalAlignment="Center"
                Background="{DynamicResource ScrollBarTrackFillPointerOver}"
                CornerRadius="0"
                Opacity="1" />
                    <RepeatButton
                x:Name="PART_ButtonScrollUp"
                Grid.Row="0"
                HorizontalContentAlignment="Left"
                Command="ScrollBar.LineUpCommand"
                Content="{x:Static ui:SymbolRegular.CaretUp24}"
                Opacity="1"
                Style="{StaticResource UiScrollBarLineButton}" />
                    <Track
                x:Name="PART_Track"
                Grid.Row="1"
                Width="10"
                IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource UiScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <!--
                        TODO: Need to add a custom Thumb with a corner radius that will increase when OnMouseOver is triggered.
                    -->
                            <Thumb
                        Margin="0"
                        Padding="0"
                        Style="{StaticResource UiScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource UiScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton
                x:Name="PART_ButtonScrollDown"
                Grid.Row="2"
                HorizontalContentAlignment="Left"
                Command="ScrollBar.LineDownCommand"
                Content="{x:Static ui:SymbolRegular.CaretDown24}"
                Opacity="1"
                Style="{StaticResource UiScrollBarLineButton}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetName="PART_Track"
                                Storyboard.TargetProperty="Width"
                                From="10"
                                To="12"
                                Duration="{StaticResource ScrollAnimationDuration}" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetName="PART_Track"
                                Storyboard.TargetProperty="Width"
                                From="12"
                                To="10"
                                Duration="{StaticResource ScrollAnimationDuration}" />
 
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="UiHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid Margin="300 0 -25 -30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="18" />
                    </Grid.ColumnDefinitions>
                    <Border
                x:Name="PART_Border"
                Grid.ColumnSpan="3"
                Height="16"
                VerticalAlignment="Center"
                Background="{DynamicResource ScrollBarTrackFillPointerOver}"
                CornerRadius="0"
                Opacity="1" />

                    <RepeatButton
                x:Name="PART_ButtonScrollLeft"
                Grid.Column="0"
                VerticalAlignment="Center"
                Command="ScrollBar.LineLeftCommand"
                Content="{x:Static ui:SymbolRegular.CaretLeft24}"
                Opacity="1"
                Style="{StaticResource UiScrollBarLineButton}" />
                    <Track
                x:Name="PART_Track"
                Grid.Column="1"
                Height="8"
                VerticalAlignment="Center"
                IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource UiScrollBarPageButton}" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb
                        Margin="0"
                        Padding="0"
                        Style="{StaticResource UiScrollBarThumb}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource UiScrollBarPageButton}" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton
                x:Name="PART_ButtonScrollRight"
                Grid.Column="2"
                VerticalAlignment="Center"
                Command="ScrollBar.LineRightCommand"
                Content="{x:Static ui:SymbolRegular.CaretRight24}"
                Opacity="1"
                Style="{StaticResource UiScrollBarLineButton}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetName="PART_Track"
                                Storyboard.TargetProperty="Height"
                                From="8"
                                To="10"
                                Duration="{StaticResource ScrollAnimationDuration}" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                Storyboard.TargetName="PART_Track"
                                Storyboard.TargetProperty="Height"
                                From="10"
                                To="8"
                                Duration="{StaticResource ScrollAnimationDuration}" />

                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="UiScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="Height" Value="16" />
                        <Setter Property="Template" Value="{StaticResource UiHorizontalScrollBar}" />
                        <Setter Property="Visibility" Value="Visible" />
                    </Trigger>
                    <Trigger Property="Orientation" Value="Vertical">
                        <Setter Property="Width" Value="20" />
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Template" Value="{StaticResource UiVerticalScrollBar}" />

                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource UiScrollBar}" TargetType="{x:Type ScrollBar}" />













        </ResourceDictionary>
    </Application.Resources>

</Application>
