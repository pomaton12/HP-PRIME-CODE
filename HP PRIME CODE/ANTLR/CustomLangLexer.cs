//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CustomLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class CustomLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, EXPORT=42, BEGIN=43, LOCAL=44, CASE=45, 
		DEFAULT=46, IF=47, THEN=48, ELSE=49, IFERR=50, FOR=51, FROM=52, WHILE=53, 
		TO=54, DO=55, DOWNTO=56, STEP=57, REPEAT=58, UNTIL=59, END=60, BREAK=61, 
		CONTINUE=62, VIEW=63, AND=64, OR=65, XOR=66, NOT=67, ID=68, HEX_NUMBER=69, 
		NUMBER=70, ASSIGN=71, EQUALS=72, SEMI=73, STRING=74, WS=75, COMMENT=76;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"EXPORT", "BEGIN", "LOCAL", "CASE", "DEFAULT", "IF", "THEN", "ELSE", "IFERR", 
		"FOR", "FROM", "WHILE", "TO", "DO", "DOWNTO", "STEP", "REPEAT", "UNTIL", 
		"END", "BREAK", "CONTINUE", "VIEW", "AND", "OR", "XOR", "NOT", "ID", "HEX_NUMBER", 
		"NUMBER", "ASSIGN", "EQUALS", "SEMI", "STRING", "WS", "COMMENT"
	};


	public CustomLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CustomLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "'('", "')'", "'#pragma'", "'mode'", "'separator'", "'integer'", 
		"'.'", "'h32'", "'h64'", "'KILL'", "'kill'", "'RETURN'", "'\\u25B6'", 
		"'^'", "'*'", "'/'", "'+'", "'-'", "'['", "']'", "'{'", "'}'", "'\\u222B'", 
		"'\\u03A3'", "'\\u2202'", "'\\u221A'", "'\\u03A3LIST'", "'\\u03A0LIST'", 
		"'\\u0394LIST'", "'!'", "'B\\u2192R'", "'>'", "'<'", "'\\u2264'", "'\\u2265'", 
		"'=='", "'>='", "'<='", "'\\u2260'", "'<>'", null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"':='", "'='", "';'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "EXPORT", "BEGIN", "LOCAL", "CASE", 
		"DEFAULT", "IF", "THEN", "ELSE", "IFERR", "FOR", "FROM", "WHILE", "TO", 
		"DO", "DOWNTO", "STEP", "REPEAT", "UNTIL", "END", "BREAK", "CONTINUE", 
		"VIEW", "AND", "OR", "XOR", "NOT", "ID", "HEX_NUMBER", "NUMBER", "ASSIGN", 
		"EQUALS", "SEMI", "STRING", "WS", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CustomLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static CustomLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,76,624,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,1,0,1,0,1,1,1,1,
		1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,
		5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,
		1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
		1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
		1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,
		1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
		1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
		1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,
		1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,40,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,304,8,41,1,
		42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,3,42,316,8,42,1,43,1,43,
		1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,328,8,43,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,44,3,44,338,8,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,
		1,45,1,45,1,45,1,45,1,45,1,45,1,45,3,45,354,8,45,1,46,1,46,1,46,1,46,3,
		46,360,8,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,370,8,47,1,48,
		1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,380,8,48,1,49,1,49,1,49,1,49,1,
		49,1,49,1,49,1,49,1,49,1,49,3,49,392,8,49,1,50,1,50,1,50,1,50,1,50,1,50,
		3,50,400,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,410,8,51,1,
		52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,422,8,52,1,53,1,53,
		1,53,1,53,3,53,428,8,53,1,54,1,54,1,54,1,54,3,54,434,8,54,1,55,1,55,1,
		55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,55,448,8,55,1,56,1,56,
		1,56,1,56,1,56,1,56,1,56,1,56,3,56,458,8,56,1,57,1,57,1,57,1,57,1,57,1,
		57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,472,8,57,1,58,1,58,1,58,1,58,1,58,
		1,58,1,58,1,58,1,58,1,58,3,58,484,8,58,1,59,1,59,1,59,1,59,1,59,1,59,3,
		59,492,8,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,3,60,504,
		8,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
		1,61,1,61,1,61,3,61,522,8,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,
		62,532,8,62,1,63,1,63,1,63,1,63,1,63,1,63,3,63,540,8,63,1,64,1,64,1,64,
		1,64,3,64,546,8,64,1,65,1,65,1,65,1,65,1,65,1,65,3,65,554,8,65,1,66,1,
		66,1,66,1,66,1,66,1,66,3,66,562,8,66,1,67,1,67,5,67,566,8,67,10,67,12,
		67,569,9,67,1,68,1,68,4,68,573,8,68,11,68,12,68,574,1,69,4,69,578,8,69,
		11,69,12,69,579,1,69,1,69,5,69,584,8,69,10,69,12,69,587,9,69,3,69,589,
		8,69,1,70,1,70,1,70,1,71,1,71,1,72,1,72,1,73,1,73,5,73,600,8,73,10,73,
		12,73,603,9,73,1,73,1,73,1,74,4,74,608,8,74,11,74,12,74,609,1,74,1,74,
		1,75,1,75,1,75,1,75,5,75,618,8,75,10,75,12,75,621,9,75,1,75,1,75,0,0,76,
		1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
		29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
		53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
		77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
		101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
		121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
		141,71,143,72,145,73,147,74,149,75,151,76,1,0,7,6,0,65,90,95,95,97,122,
		209,209,241,241,945,969,7,0,48,57,65,90,95,95,97,122,209,209,241,241,945,
		969,3,0,48,57,65,70,97,102,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,
		13,32,32,2,0,10,10,13,13,657,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
		0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,
		0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
		0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
		1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
		0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
		1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,
		0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
		0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,
		0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,
		0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,
		0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,1,153,1,0,0,0,3,155,1,
		0,0,0,5,157,1,0,0,0,7,159,1,0,0,0,9,167,1,0,0,0,11,172,1,0,0,0,13,182,
		1,0,0,0,15,190,1,0,0,0,17,192,1,0,0,0,19,196,1,0,0,0,21,200,1,0,0,0,23,
		205,1,0,0,0,25,210,1,0,0,0,27,217,1,0,0,0,29,219,1,0,0,0,31,221,1,0,0,
		0,33,223,1,0,0,0,35,225,1,0,0,0,37,227,1,0,0,0,39,229,1,0,0,0,41,231,1,
		0,0,0,43,233,1,0,0,0,45,235,1,0,0,0,47,237,1,0,0,0,49,239,1,0,0,0,51,241,
		1,0,0,0,53,243,1,0,0,0,55,245,1,0,0,0,57,251,1,0,0,0,59,257,1,0,0,0,61,
		263,1,0,0,0,63,265,1,0,0,0,65,269,1,0,0,0,67,271,1,0,0,0,69,273,1,0,0,
		0,71,275,1,0,0,0,73,277,1,0,0,0,75,280,1,0,0,0,77,283,1,0,0,0,79,286,1,
		0,0,0,81,288,1,0,0,0,83,303,1,0,0,0,85,315,1,0,0,0,87,327,1,0,0,0,89,337,
		1,0,0,0,91,353,1,0,0,0,93,359,1,0,0,0,95,369,1,0,0,0,97,379,1,0,0,0,99,
		391,1,0,0,0,101,399,1,0,0,0,103,409,1,0,0,0,105,421,1,0,0,0,107,427,1,
		0,0,0,109,433,1,0,0,0,111,447,1,0,0,0,113,457,1,0,0,0,115,471,1,0,0,0,
		117,483,1,0,0,0,119,491,1,0,0,0,121,503,1,0,0,0,123,521,1,0,0,0,125,531,
		1,0,0,0,127,539,1,0,0,0,129,545,1,0,0,0,131,553,1,0,0,0,133,561,1,0,0,
		0,135,563,1,0,0,0,137,570,1,0,0,0,139,577,1,0,0,0,141,590,1,0,0,0,143,
		593,1,0,0,0,145,595,1,0,0,0,147,597,1,0,0,0,149,607,1,0,0,0,151,613,1,
		0,0,0,153,154,5,44,0,0,154,2,1,0,0,0,155,156,5,40,0,0,156,4,1,0,0,0,157,
		158,5,41,0,0,158,6,1,0,0,0,159,160,5,35,0,0,160,161,5,112,0,0,161,162,
		5,114,0,0,162,163,5,97,0,0,163,164,5,103,0,0,164,165,5,109,0,0,165,166,
		5,97,0,0,166,8,1,0,0,0,167,168,5,109,0,0,168,169,5,111,0,0,169,170,5,100,
		0,0,170,171,5,101,0,0,171,10,1,0,0,0,172,173,5,115,0,0,173,174,5,101,0,
		0,174,175,5,112,0,0,175,176,5,97,0,0,176,177,5,114,0,0,177,178,5,97,0,
		0,178,179,5,116,0,0,179,180,5,111,0,0,180,181,5,114,0,0,181,12,1,0,0,0,
		182,183,5,105,0,0,183,184,5,110,0,0,184,185,5,116,0,0,185,186,5,101,0,
		0,186,187,5,103,0,0,187,188,5,101,0,0,188,189,5,114,0,0,189,14,1,0,0,0,
		190,191,5,46,0,0,191,16,1,0,0,0,192,193,5,104,0,0,193,194,5,51,0,0,194,
		195,5,50,0,0,195,18,1,0,0,0,196,197,5,104,0,0,197,198,5,54,0,0,198,199,
		5,52,0,0,199,20,1,0,0,0,200,201,5,75,0,0,201,202,5,73,0,0,202,203,5,76,
		0,0,203,204,5,76,0,0,204,22,1,0,0,0,205,206,5,107,0,0,206,207,5,105,0,
		0,207,208,5,108,0,0,208,209,5,108,0,0,209,24,1,0,0,0,210,211,5,82,0,0,
		211,212,5,69,0,0,212,213,5,84,0,0,213,214,5,85,0,0,214,215,5,82,0,0,215,
		216,5,78,0,0,216,26,1,0,0,0,217,218,5,9654,0,0,218,28,1,0,0,0,219,220,
		5,94,0,0,220,30,1,0,0,0,221,222,5,42,0,0,222,32,1,0,0,0,223,224,5,47,0,
		0,224,34,1,0,0,0,225,226,5,43,0,0,226,36,1,0,0,0,227,228,5,45,0,0,228,
		38,1,0,0,0,229,230,5,91,0,0,230,40,1,0,0,0,231,232,5,93,0,0,232,42,1,0,
		0,0,233,234,5,123,0,0,234,44,1,0,0,0,235,236,5,125,0,0,236,46,1,0,0,0,
		237,238,5,8747,0,0,238,48,1,0,0,0,239,240,5,931,0,0,240,50,1,0,0,0,241,
		242,5,8706,0,0,242,52,1,0,0,0,243,244,5,8730,0,0,244,54,1,0,0,0,245,246,
		5,931,0,0,246,247,5,76,0,0,247,248,5,73,0,0,248,249,5,83,0,0,249,250,5,
		84,0,0,250,56,1,0,0,0,251,252,5,928,0,0,252,253,5,76,0,0,253,254,5,73,
		0,0,254,255,5,83,0,0,255,256,5,84,0,0,256,58,1,0,0,0,257,258,5,916,0,0,
		258,259,5,76,0,0,259,260,5,73,0,0,260,261,5,83,0,0,261,262,5,84,0,0,262,
		60,1,0,0,0,263,264,5,33,0,0,264,62,1,0,0,0,265,266,5,66,0,0,266,267,5,
		8594,0,0,267,268,5,82,0,0,268,64,1,0,0,0,269,270,5,62,0,0,270,66,1,0,0,
		0,271,272,5,60,0,0,272,68,1,0,0,0,273,274,5,8804,0,0,274,70,1,0,0,0,275,
		276,5,8805,0,0,276,72,1,0,0,0,277,278,5,61,0,0,278,279,5,61,0,0,279,74,
		1,0,0,0,280,281,5,62,0,0,281,282,5,61,0,0,282,76,1,0,0,0,283,284,5,60,
		0,0,284,285,5,61,0,0,285,78,1,0,0,0,286,287,5,8800,0,0,287,80,1,0,0,0,
		288,289,5,60,0,0,289,290,5,62,0,0,290,82,1,0,0,0,291,292,5,69,0,0,292,
		293,5,88,0,0,293,294,5,80,0,0,294,295,5,79,0,0,295,296,5,82,0,0,296,304,
		5,84,0,0,297,298,5,101,0,0,298,299,5,120,0,0,299,300,5,112,0,0,300,301,
		5,111,0,0,301,302,5,114,0,0,302,304,5,116,0,0,303,291,1,0,0,0,303,297,
		1,0,0,0,304,84,1,0,0,0,305,306,5,66,0,0,306,307,5,69,0,0,307,308,5,71,
		0,0,308,309,5,73,0,0,309,316,5,78,0,0,310,311,5,98,0,0,311,312,5,101,0,
		0,312,313,5,103,0,0,313,314,5,105,0,0,314,316,5,110,0,0,315,305,1,0,0,
		0,315,310,1,0,0,0,316,86,1,0,0,0,317,318,5,76,0,0,318,319,5,79,0,0,319,
		320,5,67,0,0,320,321,5,65,0,0,321,328,5,76,0,0,322,323,5,108,0,0,323,324,
		5,111,0,0,324,325,5,99,0,0,325,326,5,97,0,0,326,328,5,108,0,0,327,317,
		1,0,0,0,327,322,1,0,0,0,328,88,1,0,0,0,329,330,5,67,0,0,330,331,5,65,0,
		0,331,332,5,83,0,0,332,338,5,69,0,0,333,334,5,99,0,0,334,335,5,97,0,0,
		335,336,5,115,0,0,336,338,5,101,0,0,337,329,1,0,0,0,337,333,1,0,0,0,338,
		90,1,0,0,0,339,340,5,68,0,0,340,341,5,69,0,0,341,342,5,70,0,0,342,343,
		5,65,0,0,343,344,5,85,0,0,344,345,5,76,0,0,345,354,5,84,0,0,346,347,5,
		100,0,0,347,348,5,101,0,0,348,349,5,102,0,0,349,350,5,97,0,0,350,351,5,
		117,0,0,351,352,5,108,0,0,352,354,5,116,0,0,353,339,1,0,0,0,353,346,1,
		0,0,0,354,92,1,0,0,0,355,356,5,73,0,0,356,360,5,70,0,0,357,358,5,105,0,
		0,358,360,5,102,0,0,359,355,1,0,0,0,359,357,1,0,0,0,360,94,1,0,0,0,361,
		362,5,84,0,0,362,363,5,72,0,0,363,364,5,69,0,0,364,370,5,78,0,0,365,366,
		5,116,0,0,366,367,5,104,0,0,367,368,5,101,0,0,368,370,5,110,0,0,369,361,
		1,0,0,0,369,365,1,0,0,0,370,96,1,0,0,0,371,372,5,69,0,0,372,373,5,76,0,
		0,373,374,5,83,0,0,374,380,5,69,0,0,375,376,5,101,0,0,376,377,5,108,0,
		0,377,378,5,115,0,0,378,380,5,101,0,0,379,371,1,0,0,0,379,375,1,0,0,0,
		380,98,1,0,0,0,381,382,5,73,0,0,382,383,5,70,0,0,383,384,5,69,0,0,384,
		385,5,82,0,0,385,392,5,82,0,0,386,387,5,105,0,0,387,388,5,102,0,0,388,
		389,5,101,0,0,389,390,5,114,0,0,390,392,5,114,0,0,391,381,1,0,0,0,391,
		386,1,0,0,0,392,100,1,0,0,0,393,394,5,70,0,0,394,395,5,79,0,0,395,400,
		5,82,0,0,396,397,5,102,0,0,397,398,5,111,0,0,398,400,5,114,0,0,399,393,
		1,0,0,0,399,396,1,0,0,0,400,102,1,0,0,0,401,402,5,70,0,0,402,403,5,82,
		0,0,403,404,5,79,0,0,404,410,5,77,0,0,405,406,5,102,0,0,406,407,5,114,
		0,0,407,408,5,111,0,0,408,410,5,109,0,0,409,401,1,0,0,0,409,405,1,0,0,
		0,410,104,1,0,0,0,411,412,5,87,0,0,412,413,5,72,0,0,413,414,5,73,0,0,414,
		415,5,76,0,0,415,422,5,69,0,0,416,417,5,119,0,0,417,418,5,104,0,0,418,
		419,5,105,0,0,419,420,5,108,0,0,420,422,5,101,0,0,421,411,1,0,0,0,421,
		416,1,0,0,0,422,106,1,0,0,0,423,424,5,84,0,0,424,428,5,79,0,0,425,426,
		5,116,0,0,426,428,5,111,0,0,427,423,1,0,0,0,427,425,1,0,0,0,428,108,1,
		0,0,0,429,430,5,68,0,0,430,434,5,79,0,0,431,432,5,100,0,0,432,434,5,111,
		0,0,433,429,1,0,0,0,433,431,1,0,0,0,434,110,1,0,0,0,435,436,5,68,0,0,436,
		437,5,79,0,0,437,438,5,87,0,0,438,439,5,78,0,0,439,440,5,84,0,0,440,448,
		5,79,0,0,441,442,5,100,0,0,442,443,5,111,0,0,443,444,5,119,0,0,444,445,
		5,110,0,0,445,446,5,116,0,0,446,448,5,111,0,0,447,435,1,0,0,0,447,441,
		1,0,0,0,448,112,1,0,0,0,449,450,5,83,0,0,450,451,5,84,0,0,451,452,5,69,
		0,0,452,458,5,80,0,0,453,454,5,115,0,0,454,455,5,116,0,0,455,456,5,101,
		0,0,456,458,5,112,0,0,457,449,1,0,0,0,457,453,1,0,0,0,458,114,1,0,0,0,
		459,460,5,82,0,0,460,461,5,69,0,0,461,462,5,80,0,0,462,463,5,69,0,0,463,
		464,5,65,0,0,464,472,5,84,0,0,465,466,5,114,0,0,466,467,5,101,0,0,467,
		468,5,112,0,0,468,469,5,101,0,0,469,470,5,97,0,0,470,472,5,116,0,0,471,
		459,1,0,0,0,471,465,1,0,0,0,472,116,1,0,0,0,473,474,5,85,0,0,474,475,5,
		78,0,0,475,476,5,84,0,0,476,477,5,73,0,0,477,484,5,76,0,0,478,479,5,117,
		0,0,479,480,5,110,0,0,480,481,5,116,0,0,481,482,5,105,0,0,482,484,5,108,
		0,0,483,473,1,0,0,0,483,478,1,0,0,0,484,118,1,0,0,0,485,486,5,69,0,0,486,
		487,5,78,0,0,487,492,5,68,0,0,488,489,5,101,0,0,489,490,5,110,0,0,490,
		492,5,100,0,0,491,485,1,0,0,0,491,488,1,0,0,0,492,120,1,0,0,0,493,494,
		5,66,0,0,494,495,5,82,0,0,495,496,5,69,0,0,496,497,5,65,0,0,497,504,5,
		75,0,0,498,499,5,98,0,0,499,500,5,114,0,0,500,501,5,101,0,0,501,502,5,
		97,0,0,502,504,5,107,0,0,503,493,1,0,0,0,503,498,1,0,0,0,504,122,1,0,0,
		0,505,506,5,67,0,0,506,507,5,79,0,0,507,508,5,78,0,0,508,509,5,84,0,0,
		509,510,5,73,0,0,510,511,5,78,0,0,511,512,5,85,0,0,512,522,5,69,0,0,513,
		514,5,99,0,0,514,515,5,111,0,0,515,516,5,110,0,0,516,517,5,116,0,0,517,
		518,5,105,0,0,518,519,5,110,0,0,519,520,5,117,0,0,520,522,5,101,0,0,521,
		505,1,0,0,0,521,513,1,0,0,0,522,124,1,0,0,0,523,524,5,86,0,0,524,525,5,
		73,0,0,525,526,5,69,0,0,526,532,5,87,0,0,527,528,5,118,0,0,528,529,5,105,
		0,0,529,530,5,101,0,0,530,532,5,119,0,0,531,523,1,0,0,0,531,527,1,0,0,
		0,532,126,1,0,0,0,533,534,5,65,0,0,534,535,5,78,0,0,535,540,5,68,0,0,536,
		537,5,97,0,0,537,538,5,110,0,0,538,540,5,100,0,0,539,533,1,0,0,0,539,536,
		1,0,0,0,540,128,1,0,0,0,541,542,5,79,0,0,542,546,5,82,0,0,543,544,5,111,
		0,0,544,546,5,114,0,0,545,541,1,0,0,0,545,543,1,0,0,0,546,130,1,0,0,0,
		547,548,5,88,0,0,548,549,5,79,0,0,549,554,5,82,0,0,550,551,5,120,0,0,551,
		552,5,111,0,0,552,554,5,114,0,0,553,547,1,0,0,0,553,550,1,0,0,0,554,132,
		1,0,0,0,555,556,5,78,0,0,556,557,5,79,0,0,557,562,5,84,0,0,558,559,5,110,
		0,0,559,560,5,111,0,0,560,562,5,116,0,0,561,555,1,0,0,0,561,558,1,0,0,
		0,562,134,1,0,0,0,563,567,7,0,0,0,564,566,7,1,0,0,565,564,1,0,0,0,566,
		569,1,0,0,0,567,565,1,0,0,0,567,568,1,0,0,0,568,136,1,0,0,0,569,567,1,
		0,0,0,570,572,5,35,0,0,571,573,7,2,0,0,572,571,1,0,0,0,573,574,1,0,0,0,
		574,572,1,0,0,0,574,575,1,0,0,0,575,138,1,0,0,0,576,578,7,3,0,0,577,576,
		1,0,0,0,578,579,1,0,0,0,579,577,1,0,0,0,579,580,1,0,0,0,580,588,1,0,0,
		0,581,585,5,46,0,0,582,584,7,3,0,0,583,582,1,0,0,0,584,587,1,0,0,0,585,
		583,1,0,0,0,585,586,1,0,0,0,586,589,1,0,0,0,587,585,1,0,0,0,588,581,1,
		0,0,0,588,589,1,0,0,0,589,140,1,0,0,0,590,591,5,58,0,0,591,592,5,61,0,
		0,592,142,1,0,0,0,593,594,5,61,0,0,594,144,1,0,0,0,595,596,5,59,0,0,596,
		146,1,0,0,0,597,601,5,34,0,0,598,600,8,4,0,0,599,598,1,0,0,0,600,603,1,
		0,0,0,601,599,1,0,0,0,601,602,1,0,0,0,602,604,1,0,0,0,603,601,1,0,0,0,
		604,605,5,34,0,0,605,148,1,0,0,0,606,608,7,5,0,0,607,606,1,0,0,0,608,609,
		1,0,0,0,609,607,1,0,0,0,609,610,1,0,0,0,610,611,1,0,0,0,611,612,6,74,0,
		0,612,150,1,0,0,0,613,614,5,47,0,0,614,615,5,47,0,0,615,619,1,0,0,0,616,
		618,8,6,0,0,617,616,1,0,0,0,618,621,1,0,0,0,619,617,1,0,0,0,619,620,1,
		0,0,0,620,622,1,0,0,0,621,619,1,0,0,0,622,623,6,75,0,0,623,152,1,0,0,0,
		35,0,303,315,327,337,353,359,369,379,391,399,409,421,427,433,447,457,471,
		483,491,503,521,531,539,545,553,561,567,574,579,585,588,601,609,619,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
